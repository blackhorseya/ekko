name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Install Bazel
        run: |
          npm install -g @bazel/bazelisk
          bazel version

      - name: Cache Bazel dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}

      - name: Build
        run: |
          make build-go

      - name: Test
        run: |
          make test-go
  docker:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud Platform
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1.1.0
        with:
          project_id: sean-side

      - name: Login to gcr
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Install Bazel
        run: |
          npm install -g @bazel/bazelisk
          bazel version

      - name: Cache Bazel dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}

      - name: Push docker image
        run: |
          make push-image

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - docker
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Checkout private submodule
        run: |
          sed -i 's/git@github.com:/https:\/\/'"${{ secrets.USERNAME }}"':'"${{ secrets.TOKEN }}"'@github.com\//' .gitmodules
          git submodule update --init --recursive

      - name: Authenticate with Google Cloud Platform
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1.1.0
        with:
          project_id: sean-side

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.7.0

      - name: Helm repo add
        run: |
          helm plugin install https://github.com/hayorov/helm-gcs.git
          make add-helm-repo

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - name: Deploy
        env:
          KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo $KUBECONFIG_FILE | base64 --decode > ~/.kube/config && export KUBECONFIG=~/.kube/config
          make upgrade-helm
