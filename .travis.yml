language: go

git:
  submodules: false

before_install:
  - echo $privatekey | base64 --decode > ~/.ssh/id_rsa && sudo chmod 400 ~/.ssh/id_rsa
  - git submodule update --init --recursive

cache:
  directories:
    - "$HOME/.cache/go-build"
    - "$HOME/gopath/pkg/mod"

go:
  - '1.15'

services:
  - docker

env:
  global:
    - GO111MODULE=on

stages:
  - Tests
  - Static Code Analytic
  - name: Deploy
    if: branch =~ /^release-\d+\.\d+$/

jobs:
  include:
    - stage: Tests
      name: Unit Test
      script:
        - make test-with-coverage
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - name: Integration Test
      script:
        - echo "execute integration test..."
    - stage: Static Code Analytic
      name: Lint
      script:
        - make lint
    - stage: Deploy
      install:
        - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - echo $kubeconfig | base64 --decode > ${HOME}/kubeconfig.yaml && export KUBECONFIG=${HOME}/kubeconfig.yaml
        - echo $gcloud_sa_key | base64 --decode > ${HOME}/key.json && export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/key.json
      script:
        - echo $docker_password | base64 --decode | docker login -u _json_key --password-stdin https://gcr.io
        - make build-image
        - make tag-image
        - make push-image
        - make deploy-with-helm ns=side deploy_to=prod
