basePath: /api
definitions:
  github_com_blackhorseya_ekko_entity_domain_task_model.Ticket:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      priority:
        type: integer
      status: {}
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_blackhorseya_ekko_entity_domain_todo_model.Todo:
    properties:
      created_by:
        type: string
      done:
        type: boolean
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  responsex.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  tickets.CreateTicketPayload:
    properties:
      title:
        example: task title
        type: string
    required:
    - title
    type: object
  tickets.UpdateTicketPayload:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      priority:
        type: integer
      status: {}
      title:
        type: string
      updated_at:
        type: string
    type: object
  todos.PatchPayload:
    properties:
      done:
        example: true
        type: boolean
    required:
    - done
    type: object
  todos.PostPayload:
    properties:
      title:
        example: example
        type: string
    required:
    - title
    type: object
info:
  contact:
    email: blackhorseya@gmail.com
    name: Sean Zheng
    url: https://blog.seancheng.space
  description: Ekko Platform Restful API document.
  license:
    name: GPL-3.0
    url: https://spdx.org/licenses/GPL-3.0-only.html
  title: Ekko Platform Restful API
  version: 0.1.0
paths:
  /healthz:
    get:
      consumes:
      - application/json
      description: Check the health of the service.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      summary: Check the health of the service.
      tags:
      - health
  /v1/tickets:
    get:
      consumes:
      - application/json
      description: list tickets
      parameters:
      - default: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Page:
              description: page
              type: int
            X-Page-Size:
              description: page size
              type: int
            X-Total-Count:
              description: total count
              type: int
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_task_model.Ticket'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: List tickets
      tags:
      - tickets
    post:
      consumes:
      - application/json
      description: create a ticket
      parameters:
      - description: create ticket payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tickets.CreateTicketPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_task_model.Ticket'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Create a ticket
      tags:
      - tickets
  /v1/tickets/{id}:
    delete:
      consumes:
      - application/json
      description: delete a ticket
      parameters:
      - description: ticket id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsex.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsex.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Delete a ticket
      tags:
      - tickets
    get:
      consumes:
      - application/json
      description: get a ticket
      parameters:
      - description: ticket id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_task_model.Ticket'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsex.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Get a ticket
      tags:
      - tickets
    put:
      consumes:
      - application/json
      description: update a ticket
      parameters:
      - description: ticket id
        in: path
        name: id
        required: true
        type: string
      - description: update ticket payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tickets.UpdateTicketPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_task_model.Ticket'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsex.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsex.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Update a ticket
      tags:
      - tickets
  /v1/todos:
    get:
      consumes:
      - application/json
      description: get todo list.
      parameters:
      - default: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Page:
              description: page
              type: int
            X-Page-Size:
              description: page size
              type: int
            X-Total-Count:
              description: total count
              type: int
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_todo_model.Todo'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Get todo list.
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: create a todo.
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/todos.PostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_todo_model.Todo'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Create a todo.
      tags:
      - todos
  /v1/todos/{id}:
    patch:
      consumes:
      - application/json
      description: update a todo.
      parameters:
      - description: todo id
        example: '"ea10d92c-9ad2-4652-baa5-84e0e9575ba4"'
        in: path
        name: id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/todos.PatchPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responsex.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_blackhorseya_ekko_entity_domain_todo_model.Todo'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsex.Response'
      security:
      - Bearer: []
      summary: Update a todo.
      tags:
      - todos
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
