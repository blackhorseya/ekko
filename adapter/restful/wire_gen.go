// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/ekko/adapter/restful/app"
	"github.com/blackhorseya/ekko/internal/app/domain/issue/biz"
	"github.com/blackhorseya/ekko/internal/app/domain/issue/biz/repo"
	biz2 "github.com/blackhorseya/ekko/internal/app/domain/task/biz"
	repo2 "github.com/blackhorseya/ekko/internal/app/domain/task/biz/repo"
	"github.com/blackhorseya/ekko/internal/pkg/config"
	"github.com/blackhorseya/ekko/internal/pkg/genx"
	"github.com/blackhorseya/ekko/internal/pkg/httpx"
	"github.com/blackhorseya/ekko/internal/pkg/log"
	"github.com/blackhorseya/ekko/internal/pkg/storage/mariadb"
	"github.com/google/wire"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func NewConfig(path2 string) (*config.Config, error) {
	configConfig, err := config.NewWithPath(path2)
	if err != nil {
		return nil, err
	}
	return configConfig, nil
}

func NewLogger(config2 *config.Config) (*zap.Logger, error) {
	logger, err := log.NewLogger(config2)
	if err != nil {
		return nil, err
	}
	return logger, nil
}

func NewService(config2 *config.Config, logger *zap.Logger, id int64) (*app.Service, error) {
	engine := httpx.NewRouter()
	server := httpx.NewServer(config2, logger, engine)
	db, err := mariadb.NewMariadb(config2, logger)
	if err != nil {
		return nil, err
	}
	iRepo := repo.NewMariadb(db)
	generator, err := genx.NewGenerator(id)
	if err != nil {
		return nil, err
	}
	iBiz := biz.NewImpl(iRepo, generator)
	repoIRepo := repo2.NewMariadb(db)
	bizIBiz := biz2.NewImpl(repoIRepo)
	restful := app.NewRestful(logger, engine, iBiz, bizIBiz)
	service := app.NewService(logger, server, restful)
	return service, nil
}

// wire.go:

var providerSet = wire.NewSet(app.ProviderSet, mariadb.NewMariadb, genx.NewGenerator, biz.IssueSet, biz2.NewImpl, repo.MariadbSet, repo2.NewMariadb)
