basePath: /api
definitions:
  er.Error:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  model.Task:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
    type: object
  model.TaskStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - TaskStatus_TASK_STATUS_UNSPECIFIED
    - TaskStatus_TASK_STATUS_TODO
    - TaskStatus_TASK_STATUS_INPROGRESS
    - TaskStatus_TASK_STATUS_DONE
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  tasks.listResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Task'
        type: array
      total:
        type: integer
    type: object
info:
  contact:
    email: blackhorseya@gmail.com
    name: sean.zheng
    url: https://blog.seancheng.space
  description: API for Todo
  license:
    name: GPL-3.0
    url: https://spdx.org/licenses/GPL-3.0-only.html
  title: Todo API
  version: 0.0.1
paths:
  /v1/tasks:
    get:
      consumes:
      - application/json
      description: List all tasks
      parameters:
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 10
        description: size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/tasks.listResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: List all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a task
      parameters:
      - description: title
        in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Create a task
      tags:
      - Tasks
  /v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Delete a task by id
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: Get a task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Get a task by id
      tags:
      - Tasks
  /v1/tasks/{id}/status:
    patch:
      consumes:
      - application/x-www-form-urlencoded
      description: Update task's status by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      - description: status
        in: formData
        name: status
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Update task's status by id
      tags:
      - Tasks
  /v1/tasks/{id}/title:
    patch:
      consumes:
      - application/x-www-form-urlencoded
      description: Change task's title by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      - description: title
        in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Change task's title by id
      tags:
      - Tasks
swagger: "2.0"
