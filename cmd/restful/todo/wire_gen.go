// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/todo-app/internal/pkg/config"
	"github.com/blackhorseya/todo-app/internal/pkg/httpx"
	"github.com/blackhorseya/todo-app/internal/pkg/log"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateService(path2 string) (*Service, error) {
	viper, err := config.NewConfig(path2)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	httpxOptions, err := httpx.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	engine := httpx.NewRouter(httpxOptions)
	server := httpx.NewServer(httpxOptions, logger, engine)
	adaptersRestful := NewRestful(logger, engine)
	service, err := NewService(logger, server, adaptersRestful)
	if err != nil {
		return nil, err
	}
	return service, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, log.ProviderSet, httpx.ProviderClientSet, httpx.ProviderServerSet, NewRestful,
	NewService,
)
