// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/gocommon/pkg/config"
	"github.com/blackhorseya/gocommon/pkg/log"
	"github.com/blackhorseya/todo-app/internal/app/todo"
	"github.com/blackhorseya/todo-app/internal/app/todo/api/restful"
	health2 "github.com/blackhorseya/todo-app/internal/app/todo/api/restful/health"
	todo3 "github.com/blackhorseya/todo-app/internal/app/todo/api/restful/todo"
	"github.com/blackhorseya/todo-app/internal/app/todo/biz"
	"github.com/blackhorseya/todo-app/internal/app/todo/biz/health"
	"github.com/blackhorseya/todo-app/internal/app/todo/biz/health/repo"
	todo2 "github.com/blackhorseya/todo-app/internal/app/todo/biz/todo"
	repo2 "github.com/blackhorseya/todo-app/internal/app/todo/biz/todo/repo"
	"github.com/blackhorseya/todo-app/internal/pkg/app"
	"github.com/blackhorseya/todo-app/internal/pkg/infra/databases"
	"github.com/blackhorseya/todo-app/internal/pkg/infra/transports/http"
	"github.com/google/wire"
)

// Injectors from wire.go:

// CreateApp serve caller to create an injector
func CreateApp(path2 string) (*app.Application, error) {
	viper, err := config.New(path2)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(options)
	if err != nil {
		return nil, err
	}
	todoOptions, err := todo.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	httpOptions, err := http.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	engine := http.NewRouter(httpOptions, logger)
	databasesOptions, err := databases.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	db, err := databases.NewMariadb(databasesOptions, logger)
	if err != nil {
		return nil, err
	}
	iHealthRepo := repo.NewMariadb(db)
	iHealthBiz := health.NewImpl(iHealthRepo)
	iHandler := health2.NewImpl(engine, iHealthBiz)
	iTodoRepo := repo2.NewMariadb(db)
	iTodoBiz := todo2.NewImpl(iTodoRepo)
	todoIHandler := todo3.NewImpl(engine, iTodoBiz)
	initHandlers := restful.CreateInitHandlerFn(iHandler, todoIHandler)
	server, err := http.New(httpOptions, logger, engine, initHandlers)
	if err != nil {
		return nil, err
	}
	application, err := todo.New(todoOptions, logger, server)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

var providerSet = wire.NewSet(log.ProviderSet, config.ProviderSet, http.ProviderSet, databases.ProviderSet, todo.ProviderSet, restful.ProviderSet, biz.ProviderSet)
