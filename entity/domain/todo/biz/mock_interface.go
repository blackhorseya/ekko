// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package biz is a generated GoMock package.
package biz

import (
	reflect "reflect"

	model "github.com/blackhorseya/ekko/entity/domain/todo/model"
	contextx "github.com/blackhorseya/ekko/pkg/contextx"
	gomock "go.uber.org/mock/gomock"
)

// MockITodoBiz is a mock of ITodoBiz interface.
type MockITodoBiz struct {
	ctrl     *gomock.Controller
	recorder *MockITodoBizMockRecorder
}

// MockITodoBizMockRecorder is the mock recorder for MockITodoBiz.
type MockITodoBizMockRecorder struct {
	mock *MockITodoBiz
}

// NewMockITodoBiz creates a new mock instance.
func NewMockITodoBiz(ctrl *gomock.Controller) *MockITodoBiz {
	mock := &MockITodoBiz{ctrl: ctrl}
	mock.recorder = &MockITodoBizMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITodoBiz) EXPECT() *MockITodoBizMockRecorder {
	return m.recorder
}

// CompleteTodo mocks base method.
func (m *MockITodoBiz) CompleteTodo(ctx contextx.Contextx, id string) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompleteTodo", ctx, id)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CompleteTodo indicates an expected call of CompleteTodo.
func (mr *MockITodoBizMockRecorder) CompleteTodo(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteTodo", reflect.TypeOf((*MockITodoBiz)(nil).CompleteTodo), ctx, id)
}

// CreateTodo mocks base method.
func (m *MockITodoBiz) CreateTodo(ctx contextx.Contextx, title string) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", ctx, title)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockITodoBizMockRecorder) CreateTodo(ctx, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockITodoBiz)(nil).CreateTodo), ctx, title)
}

// ListTodo mocks base method.
func (m *MockITodoBiz) ListTodo(ctx contextx.Contextx, opts ListTodoOptions) ([]*model.Todo, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTodo", ctx, opts)
	ret0, _ := ret[0].([]*model.Todo)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListTodo indicates an expected call of ListTodo.
func (mr *MockITodoBizMockRecorder) ListTodo(ctx, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTodo", reflect.TypeOf((*MockITodoBiz)(nil).ListTodo), ctx, opts)
}
