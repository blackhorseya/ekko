// Code generated by mockery v2.14.0. DO NOT EDIT.

package health

import (
	contextx "github.com/blackhorseya/gocommon/pkg/contextx"
	mock "github.com/stretchr/testify/mock"
)

// MockIHealthBiz is an autogenerated mock type for the IHealthBiz type
type MockIHealthBiz struct {
	mock.Mock
}

// Liveness provides a mock function with given fields: ctx
func (_m *MockIHealthBiz) Liveness(ctx contextx.Contextx) (bool, error) {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(contextx.Contextx) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(contextx.Contextx) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Readiness provides a mock function with given fields: ctx
func (_m *MockIHealthBiz) Readiness(ctx contextx.Contextx) (bool, error) {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(contextx.Contextx) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(contextx.Contextx) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockIHealthBiz interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIHealthBiz creates a new instance of MockIHealthBiz. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIHealthBiz(t mockConstructorTestingTNewMockIHealthBiz) *MockIHealthBiz {
	mock := &MockIHealthBiz{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
