// Code generated by mockery v2.14.1. DO NOT EDIT.

package repo

import (
	contextx "github.com/blackhorseya/gocommon/pkg/contextx"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockIHealthRepo is an autogenerated mock type for the IHealthRepo type
type MockIHealthRepo struct {
	mock.Mock
}

// Ping provides a mock function with given fields: ctx, timeout
func (_m *MockIHealthRepo) Ping(ctx contextx.Contextx, timeout time.Duration) error {
	ret := _m.Called(ctx, timeout)

	var r0 error
	if rf, ok := ret.Get(0).(func(contextx.Contextx, time.Duration) error); ok {
		r0 = rf(ctx, timeout)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockIHealthRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIHealthRepo creates a new instance of MockIHealthRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIHealthRepo(t mockConstructorTestingTNewMockIHealthRepo) *MockIHealthRepo {
	mock := &MockIHealthRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
